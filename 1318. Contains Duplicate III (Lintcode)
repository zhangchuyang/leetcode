# Given an array of integers, find out whether there are two distinct indices i and j in the array such that the absolute difference between nums[i] and nums[j] is at most t and the absolute difference between i and j is at most k.

# Example
# Example1

# Input: nums = [1,3,1], k = 1, t = 1
# Output: false
# Explanation: 
# nums[2] = 1, nums[1] = 3, nums[1] - nums[2] = 2 > t
# nums[0] = 1, nums[2] = 1, nums[1] - nums[2] = 0 < t,
# 2 - 0 = 2 > k
# Example2

# Input: nums = [1,3,1], k = 1, t = 2
# Output: true
# Explanation: 
# nums[2] = 1, nums[1] = 3, nums[1] - nums[2] = 2 = t,
# 2 - 1 = 1 = k

class Solution:
    """
    @param nums: the given array
    @param k: the given k
    @param t: the given t
    @return: whether there are two distinct indices i and j in the array such that the absolute difference between nums[i] and nums[j] is at most t and the absolute difference between i and j is at most k.
    """
    def containsNearbyAlmostDuplicate(self, nums, k, t):
        # Write your code here
        if k < 1 or t < 0:
            return False
        dic = collections.OrderedDict()
        for n in nums:
            key = n if not t else n // t
            for m in (dic.get(key - 1), dic.get(key), dic.get(key + 1)):
                if m is not None and abs(n - m) <= t:
                    return True
            if len(dic) == k:
                dic.popitem(False)
            # 加入新数
            dic[key] = n
        return False
