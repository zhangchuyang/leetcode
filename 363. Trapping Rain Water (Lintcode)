# Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.

# Trapping Rain Water

# Example
# Example 1:

# Input: [0,1,0]
# Output: 0
# Example 2:

# Input: [0,1,0,2,1,0,1,3,2,1,2,1]
# Output: 6
# Challenge
# O(n) time and O(1) memory

# O(n) time and O(n) memory is also acceptable.

class Solution:
    """
    @param heights: a list of integers
    @return: a integer
    
    Two Pointer from left and right, keep updating left_max and right_max
    """
    def trapRainWater(self, heights):
        # write your code here
        if not heights: return 0
        left, right = 0, len(heights) - 1
        left_max, right_max = heights[0], heights[-1]
        res = 0
        while left <= right:
            if left_max < right_max:
                left_max = max(left_max, heights[left])
                res += left_max - heights[left]
                left += 1
                
            else:
                right_max = max(right_max, heights[right])
                res += right_max - heights[right]
                right -= 1
                
        return res
