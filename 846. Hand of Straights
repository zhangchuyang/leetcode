# Alice has a hand of cards, given as an array of integers.

# Now she wants to rearrange the cards into groups so that each group is size W, and consists of W consecutive cards.

# Return true if and only if she can.

 

# Example 1:

# Input: hand = [1,2,3,6,2,3,4,7,8], W = 3
# Output: true
# Explanation: Alice's hand can be rearranged as [1,2,3],[2,3,4],[6,7,8].
# Example 2:

# Input: hand = [1,2,3,4,5], W = 4
# Output: false
# Explanation: Alice's hand can't be rearranged into groups of 4.

class Solution(object):
    def isNStraightHand(self, hand, W):
        """
        :type hand: List[int]
        :type W: int
        :rtype: bool
        """
        
        if len(hand) % W != 0:   return False
        
        count = collections.Counter(hand)

        
        while count:
            m = min(count.keys())
            num = count[m]
            for k in range(m, m+W):
                v = count[k]
                if v < num: return False
                if v == num:
                    del count[k]
                else:
                    count[k] = v - num

        return True
