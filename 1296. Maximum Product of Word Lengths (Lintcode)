# Given a string array words, find the maximum value of length(word[i]) * length(word[j]) where the two words do not share common letters. You may assume that each word will contain only lower case letters. If no such two words exist, return 0.

# Example
# Example1

# Input: ["abcw", "baz", "foo", "bar", "xtfn", "abcdef"]
# Output: 16
# Explanation:
# The two words can be "abcw", "xtfn"
# Example2

# Input: ["a", "ab", "abc", "d", "cd", "bcd", "abcd"]
# Output: 4
# Explanation:
# The two words can be "ab", "cd".


class Solution:
    """
    @param words: a string array
    @return: the maximum product
    """
    def maxProduct(self, words):
        # Write your code here

        word_set = [set(word) for word in words]
        res = 0
        
        for i in range(len(words)):
            for j in range(i + 1, len(words)):
                if word_set[i].intersection(word_set[j]):   continue
                res = max(res, len(words[i]) * len(words[j]))
        return res
