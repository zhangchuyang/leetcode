# Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

# The brackets must close in the correct order, "()" and "()[]{}" are all valid but "(]" and "([)]" are not.

# Example
# Example 1:

# Input: "([)]"
# Output: False
# Example 2:

# Input: "()[]{}"
# Output: True
# Challenge
# Use O(n) time, n is the number of parentheses.


class Solution:
    """
    @param s: A string
    @return: whether the string is a valid parentheses
    """
    def isValidParentheses(self, s):
        # write your code here
        stack = []
        
        for i in range(len(s)):
            if s[i] == '[' or s[i] == '{' or s[i] == '(':
                stack.append(s[i])
            else:
                if not stack:   return False
                if s[i] == ')':
                    if stack[-1] == '(':
                        stack.pop()
                        continue
                    else:   return False
                elif s[i] == '}':
                    if stack[-1] == '{':
                        stack.pop()
                        continue
                    else:   return False
                elif s[i] == ']':
                    if stack[-1] == '[':
                        stack.pop()
                        continue
                    else:   return False
        
        return not stack
