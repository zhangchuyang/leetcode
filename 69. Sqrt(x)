# Implement int sqrt(int x).

# Compute and return the square root of x, where x is guaranteed to be a non-negative integer.

# Since the return type is an integer, the decimal digits are truncated and only the integer part of the result is returned.

# Example 1:

# Input: 4
# Output: 2
# Example 2:

# Input: 8
# Output: 2
# Explanation: The square root of 8 is 2.82842..., and since 
#              the decimal part is truncated, 2 is returned.


# Binary Search

class Solution(object):
    def mySqrt(self, x):
        """
        :type x: int
        :rtype: int
        """
        
        if x == 1:  return 1
        
        left, right = 1, x // 2
        
        while left + 1 < right:
            mid = left + (right - left) // 2
            if mid ** 2 == x:   return mid
            elif mid ** 2 > x:
                right = mid
            elif mid ** 2 < x:
                left = mid
                
                
        if left ** 2 < x and right ** 2 > x:    return left
        else:   return right
