# Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.

# Example 1:

# Input:
# [
#  [ 1, 2, 3 ],
#  [ 4, 5, 6 ],
#  [ 7, 8, 9 ]
# ]
# Output: [1,2,3,6,9,8,7,4,5]
# Example 2:

# Input:
# [
#   [1, 2, 3, 4],
#   [5, 6, 7, 8],
#   [9,10,11,12]
# ]
# Output: [1,2,3,4,8,12,11,10,9,5,6,7]

class Solution(object):
    def spiralOrder(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: List[int]
        """
        
        
        res = []
        while matrix:
            res += matrix.pop(0)
            
            if not matrix:  break
            
            for i in range(len(matrix)):
                if matrix[i]:
                    res.append(matrix[i][-1])
                    matrix[i].pop()
            if not matrix:  break

            l = matrix.pop()
            res += l[::-1]
            if not matrix:  break
            for i in range(len(matrix) - 1, -1, -1):
                if matrix[i]:
                    res.append(matrix[i][0])
                    matrix[i].pop(0)

            if not matrix:  break

            
            
        return res
