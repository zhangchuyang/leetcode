# Given two sorted integer arrays A and B, merge B into A as one sorted array.

# Example
# Example 1:

# Input：[1, 2, 3] 3  [4,5]  2
# Output：[1,2,3,4,5]
# Explanation:
# After merge, A will be filled as [1, 2, 3, 4, 5]
# Example 2:

# Input：[1,2,5] 3 [3,4] 2
# Output：[1,2,3,4,5]
# Explanation:
# After merge, A will be filled as [1, 2, 3, 4, 5]
# Notice
# You may assume that A has enough space (size that is greater or equal to m + n) to hold additional elements from B. The number of elements initialized in A and B are m and n respectively.

# Two Pointer and start from the end and append the smaller element into A

class Solution:
    """
    @param: A: sorted integer array A which has m elements, but size of A is m+n
    @param: m: An integer
    @param: B: sorted integer array B which has n elements
    @param: n: An integer
    @return: nothing
    """
    def mergeSortedArray(self, A, m, B, n):
        # write your code here

        ptr1, ptr2, ptr = m - 1, n - 1, m + n - 1
        while ptr1 >= 0 and ptr2 >= 0:
            if A[ptr1] > B[ptr2]:
                A[ptr] = A[ptr1]
                ptr -= 1
                ptr1 -= 1
            else:
                A[ptr] = B[ptr2]
                ptr -= 1
                ptr2 -= 1
        
        while ptr1 >= 0:
            A[ptr] = A[ptr1]
            ptr -= 1
            ptr1 -= 1
            
        while ptr2 >= 0:
            A[ptr] = B[ptr2]
            ptr -= 1
            ptr2 -= 1
