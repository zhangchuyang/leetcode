"""
Definition of TreeNode:
class TreeNode:
    def __init__(self, val):
        self.val = val
        self.left, self.right = None, None
"""


# Given a binary tree, find the leftmost value in the last row of the tree.

# Example
# Example 1:

# Input:{2,1,3}
# Output:1

# Explanation:
#   2
#  /  \
# 1   3
# Example 2:

# Input:{1,2,3,4,5,6,#,#,7}
# Output:7

# Explanation:
#           1
#         /  \
#       2     3
#     /  \    / 
#   4     5 6
#   \
#     7
# Notice
# You may assume the tree (i.e., the given root node) is not NULL.

class Solution:
    """
    @param root: a root of tree
    @return: return a integer
    """
    def findBottomLeftValue(self, root):
        # write your code here
        stack = [root]
        
        res = []
        leftmost = None
        
        while stack:
            for node in stack:
                if node.left:    res.append(node.left)
                if node.right:  res.append(node.right)
                
            if res: leftmost = res[0].val
            else:   return leftmost
            
            stack, res = res, []
            
        return

