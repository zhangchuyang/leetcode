# Given a binary tree, return the postorder traversal of its nodes' values.

# Input: [1,null,2,3]
#    1
#     \
#      2
#     /
#    3

# Output: [3,2,1]


# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def postorderTraversal(self, root):
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        
        
        if not root:    return []
        
        stack, res = [], []
        
        while stack or root:
            if root:
                stack.append(root)
                root = root.left if root.left else root.right
            else:
                root = stack.pop()
                res.append(root.val)
                
                if stack and stack[-1].left == root:
                    root = stack[-1].right
                else:   root = None
                    
        return res

