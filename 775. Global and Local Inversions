class Solution(object):
    def isIdealPermutation(self, A):
        """
        :type A: List[int]
        :rtype: bool
        
        So smart. In order to make gloabl number equals to local numbers. It means all global are locals. So no number should be larger than the index 2 advanced. So the max of the previous list should be less to the index 2 advanced.
        """
        
        cmax = 0
        for i in range(len(A) - 2):
            cmax = max(cmax, A[i])
            if cmax > A[i + 2]:
                return False
        return True
