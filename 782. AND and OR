# Give n non-negative integers, find the sum of maximum OR sum, minimum OR sum, maximum AND sum, minimum AND sum.

# Example
# Example 1:

# Input:
# n = 3
# nums = [1, 2, 3]
# Output: 
# 7
# Explanation:
# maximum OR sum: 3, minimum OR sum: 1, maximum AND sum: 3, minimum AND sum: 0.
# result: 3 + 1 + 3 + 0 = 7.
# Example 2:

# Input:
# n = 3
# nums = [0, 0, 1]
# Output: 
# 2
# Explanation:
# maximum OR sum: 1, minimum OR sum: 0, maximum AND sum: 1, minimum AND sum: 0.
# result: 1 + 0 + 1 + 0 = 2.
# Example 3:

# Input:
# n = 5
# nums = [12313, 156, 4564, 212, 12]
# Output: 
# 25090
# Explanation:
# maximum OR sum: 12765, minimum OR sum: 12, maximum AND sum: 12313, minimum AND sum: 0.
# result: 12765 + 12 + 12313 = 25090
# Example 4:

# Input:
# n = 3
# nums = [111111, 333333, 555555]
# Output: 
# 1588322
# Explanation:
# maximum OR sum: 917047, minimum OR sum: 111111, maximum AND sum: 555555, minimum AND sum: 4609.
# result: 917047+ 111111+ 555555+ 4609 = 1588322.



class Solution:
    """
    @param n: 
    @param nums: 
    @return: return the sum of maximum OR sum, minimum OR sum, maximum AND sum, minimum AND sum.
    """
    
    
    # 最大或和：所有数或起来。

    # 最小或和：最小数。
    
    # 最大与和：最大数。
    
    # 最小与和：所有数与起来。
    
    # 最后将最大或和，最小或和，最大与和，最小与和，注意答案范围可能超过 int。
    
    # 时间复杂度 O(n)。
    
    # 空间复杂度 O(1)。
    def getSum(self, n, nums):
        # write your code here
        maxOrSum, maxAndSum, minOrSum, minAndSum = nums[0], nums[0], nums[0], nums[0]
        
        for i in range(1, n):
            maxOrSum |= nums[i]
            maxAndSum = max(maxAndSum, nums[i])
            minOrSum = min(minOrSum, nums[i])
            minAndSum &= nums[i]
            
        return maxOrSum + maxAndSum + minOrSum + minAndSum
