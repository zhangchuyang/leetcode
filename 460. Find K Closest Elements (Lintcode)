# Given target, a non-negative integer k and an integer array A sorted in ascending order, find the k closest numbers to target in A, sorted in ascending order by the difference between the number and target. Otherwise, sorted in ascending order by number if the difference is same.

# Example
# Example 1:

# Input: A = [1, 2, 3], target = 2, k = 3
# Output: [2, 1, 3]
# Example 2:

# Input: A = [1, 4, 6, 8], target = 3, k = 3
# Output: [4, 1, 6]
# Challenge
# O(logn + k) time

# Notice
# The value k is a non-negative integer and will always be smaller than the length of the sorted array.
# Length of the given array is positive and will not exceed 10^410
# ​4
# ​​ 
# Absolute value of elements in the array will not exceed 10^410
# ​4
# ​​

class Solution:
    """
    @param A: an integer array
    @param target: An integer
    @param k: An integer
    @return: an integer array
    """
    def kClosestNumbers(self, A, target, k):
        # write your code here
        if not k:   return []
        left, right = 0, len(A)
        index = float('-inf')
        while left + 1 < right:
            mid = left + (right - left) // 2
            if A[mid] == target:
                index = mid
                break
            elif A[mid] < target:
                left = mid
            else:
                right = mid
        
        res = []
        if index == float('-inf'):
            res_left, res_right = left, right
        else:
            res_left, res_right = index - 1, index + 1
            res.append(A[mid])
            
        print(res_left, res_right)
        while len(res) < k:
            if self.left_closer(res_left, res_right, A, target):
                res.append(A[res_left])
                res_left -=1
                
            else:
                res.append(A[res_right])
                res_right += 1
    
        return res
        
        
    def left_closer(self, left, right, A, target):
        if left < 0:    return False
        if right >= len(A): return True
        return target - A[left] <= A[right] - target
