# Given a 32-bit signed integer, reverse digits of an integer.

# Example 1:

# Input: 123
# Output: 321
# Example 2:

# Input: -123
# Output: -321
# Example 3:

# Input: 120
# Output: 21
# Note:
# Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [−231,  231 − 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.
    
    
class Solution(object):
    def reverse(self, x):
        """
        :type x: int
        :rtype: int
        """
        if not x:   return 0
        neg = False
        if x < 0:
            neg = True
            x = -x
        
        x = str(x)
        res = x[::-1]
        for i in res:
            if i == '0':    res = res[1:]
            else:   break

        res = int('-' + res) if neg else int(res)
        
        if res > 2 ** 31 - 1 or res < - 2 **31: return 0
        
        return res
