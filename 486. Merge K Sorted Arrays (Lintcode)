# Given k sorted integer arrays, merge them into one sorted array.

# Example
# Example 1:

# Input: 
#   [
#     [1, 3, 5, 7],
#     [2, 4, 6],
#     [0, 8, 9, 10, 11]
#   ]
# Output: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
# Example 2:

# Input:
#   [
#     [1,2,3],
#     [1,2]
#   ]
# Output: [1,1,2,2,3]
# Challenge
# Do it in O(N log k).


import heapq
class Solution:
    """
    @param arrays: k sorted integer arrays
    @return: a sorted array
    
    用Min-Heap 的方法做。 Time: O(Nlogk)
    """
    
    def mergekSortedArrays(self, arrays):
        # write your code here



        # res = []
        # if not arrays:  return []
        # if len(arrays) == 1:    return arrays[0]
        
        
        # heap = [float('inf')]
        
        # while heap:
        #     for arr in arrays:
        #         if arr: heap.append(arr.pop(0))
            
        #     heapq.heapify(heap)
        #     res.append(heapq.heappop(heap))
        
        
        # return res[:-1]
        
        
        res = []
        for a in arrays:
            res += a
        return sorted(res)
