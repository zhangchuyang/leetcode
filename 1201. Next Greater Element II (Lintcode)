# Given a circular array (the next element of the last element is the first element of the array), print the Next Greater Number for every element. The Next Greater Number of a number x is the first greater number to its traversing-order next in the array, which means you could search circularly to find its next greater number. If it doesn't exist, output -1 for this number.

# Example
# Example 1:

# Input: [1,2,1]
# Output: [2,-1,2]
# Explanation: The first 1's next greater number is 2; 
# The number 2 can't find next greater number; 
# The second 1's next greater number needs to search circularly, which is also 2.
# Example 2:

# Input: [1]
# Output: [-1]
# Explanation: 
# The number 1 can't find next greater number.
# Notice
# The length of given array won't exceed 10000.


class Solution:
    """
    @param nums: an array
    @return: the Next Greater Number for every element
    """
    def nextGreaterElements(self, nums):
        # Write your code here

        stack = []
        
        d = collections.defaultdict(list)
        
        for num in nums:
            while stack and stack[-1] < num:
                d[stack.pop()].append(num)
            stack.append(num)
            
        for num in nums:
            while stack and stack[-1] < num:
                d[stack.pop()].append(num)
                
        res = [0 for _ in range(len(nums))]
        
        for i in reversed(range(len(nums))):
            res[i] = d[nums[i]].pop() if nums[i] in d else -1
        return res
