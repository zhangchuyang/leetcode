# Given a non-empty array of digits representing a non-negative integer, plus one to the integer.

# The digits are stored such that the most significant digit is at the head of the list, and each element in the array contain a single digit.

# You may assume the integer does not contain any leading zero, except the number 0 itself.

# Example 1:

# Input: [1,2,3]
# Output: [1,2,4]
# Explanation: The array represents the integer 123.
# Example 2:

# Input: [4,3,2,1]
# Output: [4,3,2,2]
# Explanation: The array represents the integer 4321.


class Solution(object):
    def plusOne(self, digits):
        """
        :type digits: List[int]
        :rtype: List[int]
        """
#         number = ''
#         for digit in digits:
#             number += str(digit)
            
#         number = int(number) + 1

#         return [x for x in str(number)]



#  Second Way
        if digits[-1] != 9:
            digits[-1] += 1
            return digits
        length = len(digits) -1
        while length >= 0:
            if digits[length] == 9:
                length -= 1
            else:
                digits[length] += 1
                temp = digits[:length + 1]
                temp.extend([0 for i in range(len(digits) - length - 1)])
                return temp
        temp = [1]
        temp.extend([0 for i in range(len(digits))])
        return temp
        
