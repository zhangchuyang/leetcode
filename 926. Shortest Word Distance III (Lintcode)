# This is a follow up of Shortest Word Distance. The only difference is now word1 could be the same as word2.

# Given a list of words and two words word1 and word2, return the shortest distance between these two words in the list.

# word1 and word2 may be the same and they represent two individual words in the list.

# Example
# Example 1:

# Input: words = ["practice", "makes", "perfect", "coding", "makes"], word1 = "makes", word2 = â€œcoding"
# Output: 1
# Example 2:

# Input: words =["a","a","c","b"], word1 = "a", word2 = "b"
# Output: 2
# Notice
# You may assume word1 and word2 are both in the list.

class Solution:
    """
    @param words: a list of words
    @param word1: a string
    @param word2: a string
    @return: the shortest distance between word1 and word2 in the list
    """
    def shortestWordDistance(self, words, word1, word2):
        # Write your code here
        
        pos1 = pos2 = res = float('inf')

        for i in range(len(words)):
            if words[i] == word1:
                pos1 = i
                res = min(res, abs(i - pos2))
                if word1 == word2:
                    pos2 = pos1
            elif words[i] == word2:
                pos2 = i
                res = min(res, abs(i - pos1))
        
        return res
