# Your are given an array of positive integers nums.

# Count and print the number of (contiguous) subarrays where the product of all the elements in the subarray is less than k.

# Example 1:
# Input: nums = [10, 5, 2, 6], k = 100
# Output: 8
# Explanation: The 8 subarrays that have product less than 100 are: [10], [5], [2], [6], [10, 5], [5, 2], [2, 6], [5, 2, 6].
# Note that [10, 5, 2] is not included as the product of 100 is not strictly less than k.

class Solution(object):
    def numSubarrayProductLessThanK(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: int
        """
        
        if k == 0:  return 0
        res = 0
        start, product = 0, 1
        for end in range(len(nums)):
            while start <= end and product * nums[end] >= k:
                product = product / nums[start]
                start += 1
            product = 1 if start > end else product * nums[end]
            res = res if start > end else res + (end - start + 1)
        return res
