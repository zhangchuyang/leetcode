# Convert a non-negative integer to its english words representation. Given input is guaranteed to be less than 231 - 1.

# Example 1:

# Input: 123
# Output: "One Hundred Twenty Three"
# Example 2:

# Input: 12345
# Output: "Twelve Thousand Three Hundred Forty Five"
# Example 3:

# Input: 1234567
# Output: "One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven"
# Example 4:

# Input: 1234567891
# Output: "One Billion Two Hundred Thirty Four Million Five Hundred Sixty Seven Thousand Eight Hundred Ninety One"

# Recursion way to solve by divided into different parts.


class Solution(object):
    def numberToWords(self, num):
        """
        :type num: int
        :rtype: str
        """
        to19 = 'One Two Three Four Five Six Seven Eight Nine Ten Eleven Twelve Thirteen Fourteen Fifteen Sixteen Seventeen Eighteen Nineteen'.split()
        tens = 'Twenty Thirty Forty Fifty Sixty Seventy Eighty Ninety'.split()
        thousand = 'Thousand Million Billion'.split()
        
        def word(num, index = 0):
            if num == 0:    return []
            if num < 20:    return [to19[num - 1]]
            if num < 100:   return [tens[num // 10 - 2]] + word(num % 10)
            if num < 1000:  return [to19[num // 100 - 1]] + ['Hundred'] + word(num % 100)
            
            p, r = num // 1000, num % 1000
            
            space = [thousand[index]] if p % 1000 != 0 else []
            
            return word(p, index + 1) + space + word(r)
        
        return ' '.join(word(num)) or 'Zero'
