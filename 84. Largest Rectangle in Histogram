# Given n non-negative integers representing the histogram's bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.

 


# Above is a histogram where width of each bar is 1, given height = [2,1,5,6,2,3].

 


# The largest rectangle is shown in the shaded area, which has area = 10 unit.

 

# Example:

# Input: [2,1,5,6,2,3]
# Output: 10

class Solution(object):
    def largestRectangleArea(self, heights):
        """
        :type heights: List[int]
        :rtype: int
        
        单调栈的使用， 如果右边的值比最后一个大， append进去，不然的话pop出所有比值大的值
        
        Time: O(n)
        """
        
        res, stack = 0, []
        heights += [0]
        for i in range(len(heights)):
            while stack and heights[i] < heights[stack[-1]]:
                area = heights[stack.pop()] * (i if not stack else i - stack[-1] - 1)
                res = max(res, area)
            stack.append(i)
            
        return res
            
