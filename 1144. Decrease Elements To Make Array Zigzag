# Given an array nums of integers, a move consists of choosing any element and decreasing it by 1.

# An array A is a zigzag array if either:

# Every even-indexed element is greater than adjacent elements, ie. A[0] > A[1] < A[2] > A[3] < A[4] > ...
# OR, every odd-indexed element is greater than adjacent elements, ie. A[0] < A[1] > A[2] < A[3] > A[4] < ...
# Return the minimum number of moves to transform the given array nums into a zigzag array.

 

# Example 1:

# Input: nums = [1,2,3]
# Output: 2
# Explanation: We can decrease 2 to 0 or 3 to 1.
# Example 2:

# Input: nums = [9,6,1,6,2]
# Output: 4

class Solution(object):
    def movesToMakeZigzag(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        nums1 = nums[:]
        even, odd = 0, 0
        for i in range(0, len(nums1), 2):
            if i - 1 >= 0 and nums1[i] <= nums1[i - 1]:
                even += nums1[i - 1] - nums1[i] + 1
                nums1[i - 1] = nums1[i] - 1
            if i + 1 < len(nums) and nums1[i] <= nums1[i + 1]:
                even += nums1[i + 1] - nums1[i] + 1
                nums1[i + 1] = nums1[i] - 1
        nums1 = nums[:]
        for i in range(1, len(nums1), 2):
            if i - 1 >= 0 and nums1[i] <= nums1[i - 1]:
                odd += nums1[i - 1] - nums1[i] + 1
                nums1[i - 1] = nums1[i] - 1
            if i + 1 < len(nums1) and nums1[i] <= nums1[i + 1]:
                odd += nums1[i + 1] - nums1[i] + 1
                nums1[i + 1] = nums1[i] - 1
        return min(odd, even)
