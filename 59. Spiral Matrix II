# Given a positive integer n, generate a square matrix filled with elements from 1 to n2 in spiral order.

# Example:

# Input: 3
# Output:
# [
#  [ 1, 2, 3 ],
#  [ 8, 9, 4 ],
#  [ 7, 6, 5 ]
# ]

class Solution(object):
    def generateMatrix(self, n):
        """
        :type n: int
        :rtype: List[List[int]]\
        
        
        把他做成四个方向， 然后碰到底或者非0的数转向
        """
        
        
        res = [[0 for _ in range(n)] for _ in range(n)]

        directions = ((0,1), (1, 0), (0, -1), (-1, 0))
        d, x, y = 0, 0, 0
        
        for i in range(1, n ** 2 + 1):
            res[x][y] = i
            dx, dy = directions[d % 4]
            if 0 <= x + dx < n and 0 <= y + dy < n and res[x + dx][y + dy] == 0:
                x += dx
                y += dy
            else:
                d += 1
                dx, dy = directions[d % 4]
                x += dx
                y += dy
        return res
