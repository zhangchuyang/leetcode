# Given a string containing only three types of characters: '(', ')' and '*', write a function to check whether this string is valid. We define the validity of a string by these rules:

# Any left parenthesis '(' must have a corresponding right parenthesis ')'.
# Any right parenthesis ')' must have a corresponding left parenthesis '('.
# Left parenthesis '(' must go before the corresponding right parenthesis ')'.
# '*' could be treated as a single right parenthesis ')' or a single left parenthesis '(' or an empty string.
# An empty string is also valid.
# Example
# Example 1:
# 	Input:  "()"
# 	Output:  true

	
# Example 2:
# 	Input: "(*)"
# 	Output:  true
	
# 	Explanation:
# 	'*' is empty.
	
# Example 3:
# 	Input: "(*))"
# 	Output: true
	
# 	Explanation:
# 	use '*' as '('.
# Notice
# The string size will be in the range [1, 100].

class Solution:
    """
    @param s: the given string
    @return: whether this string is valid
    """
    def checkValidString(self, s):
        # Write your code here

        n = len(s)
        left, cp = 0, 0
        for i in range(0, n):
            if s[i] == '(':
                left += 1
                cp += 1
            elif s[i] == '*':
                if left > 0:
                    left -= 1
                cp += 1
            else:
                if left > 0:
                    left -= 1
                cp -= 1
                if cp < 0:
                    return False
        
        if left > 0:
            return False
        else:
            return True
