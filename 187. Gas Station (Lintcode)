# There are N gas stations along a circular route, where the amount of gas at station i is gas[i].

# You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from station i to its next station (i+1). You begin the journey with an empty tank at one of the gas stations.

# Return the starting gas station's index if you can travel around the circuit once, otherwise return -1.

# Example
# Example 1:

# Input:gas[i]=[1,1,3,1],cost[i]=[2,2,1,1]
# Output:2
# Example 2:

# Input:gas[i]=[1,1,3,1],cost[i]=[2,2,10,1]
# Output:-1
# Challenge
# O(n) time and O(1) extra space


class Solution:
    """
    @param gas: An array of integers
    @param cost: An array of integers
    @return: An integer
    """
    def canCompleteCircuit(self, gas, cost):
        # write your code here
        
        start = len(gas) - 1
        end = 0
        total = gas[start] - cost[start]
        
        while end < start:
            if total < 0:
                start -= 1
                total += gas[start] - cost[start]
            else:
                total += gas[end] - cost[end]
                end += 1
        
        return start if total >= 0 else -1
