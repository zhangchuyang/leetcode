Given a string and a string dictionary, find the longest string in the dictionary that can be formed by deleting some characters of the given string. If there are more than one possible results, return the longest word with the smallest lexicographical order. If there is no possible result, return the empty string.

Example
Example 1:

Input:
s = "abpcplea", d = ["ale","apple","monkey","plea"]

Output: 
"apple"
Example 2:

Input:
s = "abpcplea", d = ["a","b","c"]

Output: 
"a"
Notice
All the strings in the input will only contain lower-case letters.
The size of the dictionary won't exceed 1,000.


class Solution:
    """
    @param s: a string
    @param d: List[str]
    @return: return a string
    """
    def findLongestWord(self, s, d):
        # write your code  here
        
        d.sort(key=lambda x: (-len(x), x))
        
        for word in d:
            if self.isSub(s, word):
                return word
        return ''
        
        
    def isSub(self, s, word):
        if len(s) < len(word):  return False
        index = 0
        
        for char in s:
            if index == len(word):  return True
            if char == word[index]:
                index += 1
        return index == len(word)
