# Given a non-empty array of numbers, a0, a1, a2, … , an-1, where 0 ≤ ai < 2^31.

# Find the maximum result of ai XOR aj, where 0 ≤ i, j < n.

# Example
# Example1

# Input: [3, 10, 5, 25, 2, 8]

# Output: 28

# Explanation: The maximum result is 5 ^ 25 = 28
# Example2

# Input: [2,4]

# Output: 6
# Challenge
# Could you do this in O(n) runtime?

class Solution:
    """
    @param nums: 
    @return: the maximum result of ai XOR aj, where 0 â¤ i, j < n
    """
    def findMaximumXOR(self, nums):
        # Write your code here
        answer = 0
        for i in range(32)[::-1]:
            answer <<= 1
            prefixes = {num >> i for num in nums}
            answer += any(answer^1 ^ p in prefixes for p in prefixes)
        return answer
